{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/smithdc/Desktop/MeetUp-NextJs/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    descripton: props.meetupData.description,\n    title: props.meetupData.title,\n    address: props.meetupData.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n}; // if using getStaticProps in a dynamic page must export getStaticPaths\n// tells next js for which dynamic parameter values this page should be pregenerated\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/smithdc/Desktop/MeetUp-NextJs/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","description","title","address"],"mappings":";;;;;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,UAAU,EAAEF,KAAK,CAACC,UAAN,CAAiBE,WAF/B;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAH1B;AAIE,IAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ5B;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD,C,CAUA;AACA;;;KAXMN,a;;AA4DN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = (props) => {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      descripton={props.meetupData.description}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n    />\n  );\n};\n// if using getStaticProps in a dynamic page must export getStaticPaths\n// tells next js for which dynamic parameter values this page should be pregenerated\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin-smithdc:BdiyNjdBKqvZaPrC@meetupdatabase.fwbit.mongodb.net/meetups?retryWrites=true&w=majority\",\n    { useUnifiedTopology: true }\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n  // generate array dynamically\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  // fetch data for single meet up\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin-smithdc:BdiyNjdBKqvZaPrC@meetupdatabase.fwbit.mongodb.net/meetups?retryWrites=true&w=majority\",\n    { useUnifiedTopology: true }\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: selectedMeetup,\n    },\n  };\n};\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}